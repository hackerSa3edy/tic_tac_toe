name: tic-tac-toe-project

services:
  backend:
    hostname: backend
    container_name: backend
    build:
      context: .
      dockerfile: backend.Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    depends_on:
      - mongodb
      - client
    volumes:
      - ./static:/app/static:ro
    command: gunicorn --worker-class eventlet -w 1 app:app --bind 0.0.0.0:3000

  mongodb:
    hostname: mongo
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    env_file:
      - .env.production
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
      - MONGO_NON_ROOT_USERNAME=${MONGO_NON_ROOT_USERNAME}
      - MONGO_NON_ROOT_PASSWORD=${MONGO_NON_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  client:
    hostname: client
    container_name: client
    build:
      context: ../Client
      dockerfile: client.Dockerfile
    volumes:
      - ../server/static:/app/dist
    env_file:
      - ../Client/.env
    command: >
      sh -c "rm -rf /app/dist/* && npm run build"

volumes:
  mongodb_data:
    name: mongodb_data

networks:
  default:
    name: tic-tac-toe-network
